#!/usr/bin/env bash
set -euo pipefail

# Regular Colors
Red=''
Green=''

if [[ -t 1 ]]; then
	# Reset
	Color_Off='\033[0m' # Text Reset

	# Regular Colors
	Red='\033[0;31m'   # Red
	Green='\033[0;32m' # Green
fi

error() {
	echo -e "${Red}ERROR${Color_Off}:" "$@" >&2
	exit 1
}

success() {
	echo -e "${Green}$* ${Color_Off}"
}

# Storing the timer passed as an argument.
timer=$1

# Checking if the number of positional parameters ($#) is 0.
if [[ "$#" -eq 0 ]]; then
	error "Need an time interval for sleep."
# Checking if the number of positional parameters ($#) are more than 1.
elif [[ "$#" -gt 1 ]]; then
	error "Accepts only 1 argument"
# Checking if the $timer is all numbers (int|float).
elif [[ "$timer" =~ ^[0-9]+(.[0-9]+)?$ ]]; then
	seconds=$timer
	unit='seconds'
# Checking if the $timer has format for units.
elif [[ "$timer" =~ ^[0-9]+(.[0-9]+)?[smh]$ ]]; then
	# Extracting the last character from $timer
	requnit="${timer:0-1}"
	# Extracting the string except the last character.
	timer=${timer%?}

	if [[ "$requnit" == "s" ]]; then
		seconds=$timer
		unit='seconds'
	elif [[ "$requnit" == "m" ]]; then
		seconds=$(echo "$timer * 60" | bc)
		unit='minutes'
	elif [[ "$requnit" == "h" ]]; then
		seconds=$(echo "$timer * 3600" | bc)
		unit="hours"
	fi
else
	error "Invalid argument, must be a positive number followed by optional s, m and h for seconds, minutes and hour respectively."
fi

success "Sleeping after $timer $unit"
sleep "$seconds" && pmset sleepnow

exit 0
